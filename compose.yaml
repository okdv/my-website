version: '3'
services:
  backend:
    image: my-website/backend
    container_name: my-website_backend_1
    build:
      context: .
      dockerfile: ./backend.Dockerfile 
      args:
        NODE_ENV: ${NODE_ENV}
        DB_CLIENT: ${DB_CLIENT}
        DB_PORT: ${DB_PORT}
        DB_NAME: ${DB_NAME}
        DB_USERNAME: ${DB_USERNAME}
        DB_PASSWORD: ${DB_PASSWORD}
    restart: unless-stopped
    networks:
      website:
        ipv4_address: 172.69.0.2
    ports:
      - '1337:1337'
    depends_on:
      - postgres

  postgres:
    image: postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./backend/data:/var/lib/postgresql/data
    networks:
      website:
        ipv4_address: 172.69.0.3
    ports:
      - '5432:5432'

  frontend:
    image: my-website/frontend
    container_name: my-website_frontend_1
    build:
      context: .
      dockerfile: ./frontend.Dockerfile
      args:
        NODE_ENV: ${NODE_ENV}
        PUBLIC_URL: ${PUBLIC_URL}
    restart: unless-stopped
    env_file:
     - ./.env
    volumes:
      - ./frontend:/usr/src/app
    networks:
      website:
        ipv4_address: 172.69.0.4
    ports:
      - 3000:3000
    depends_on:
      - backend
      - postgres

networks:
  website:
    ipam:
      driver: default
      config:
        - subnet: 172.69.0.0/16
          gateway: 172.69.0.1
